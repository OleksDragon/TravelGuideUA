package com.example.travelguideua.ui.detail;

import android.os.Bundle;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;
import androidx.lifecycle.ViewModelProvider;
import com.bumptech.glide.Glide;
import com.example.travelguideua.R;
import com.example.travelguideua.viewmodel.FavoriteViewModel;
import com.example.travelguideua.viewmodel.HistoryViewModel;
import com.example.travelguideua.viewmodel.PlaceViewModel;
import com.example.travelguideua.data.model.Place;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

public class DetailActivity extends AppCompatActivity {
    private PlaceViewModel placeViewModel;
    private FavoriteViewModel favoriteViewModel;
    private HistoryViewModel historyViewModel;

    private TextView nameView, regionView, descriptionView, weatherView;
    private ImageView imageView, favoriteButton;

    private static final Map<String, String> regionCityMap = new HashMap<>();
    static {
        regionCityMap.put("–ö–∏—ó–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "Kyiv");
        regionCityMap.put("–õ—å–≤—ñ–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "Lviv");
        regionCityMap.put("–û–¥–µ—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "Odesa");
        regionCityMap.put("–Ü–≤–∞–Ω–æ-–§—Ä–∞–Ω–∫—ñ–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "Ivano-Frankivsk");
        regionCityMap.put("–•–∞—Ä–∫—ñ–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "Kharkiv");
        regionCityMap.put("–î–Ω—ñ–ø—Ä–æ–ø–µ—Ç—Ä–æ–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "Dnipro");
        regionCityMap.put("–ó–∞–ø–æ—Ä—ñ–∑—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "Zaporizhzhia");
        regionCityMap.put("–•–º–µ–ª—å–Ω–∏—Ü—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "Khmelnytskyi");
        regionCityMap.put("–ü–æ–ª—Ç–∞–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "Poltava");
        regionCityMap.put("–ß–µ—Ä–Ω—ñ–≥—ñ–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "Chernihiv");
        regionCityMap.put("–ß–µ—Ä–∫–∞—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "Cherkasy");
        regionCityMap.put("–í–æ–ª–∏–Ω—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "Lutsk");
        regionCityMap.put("–¢–µ—Ä–Ω–æ–ø—ñ–ª—å—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "Ternopil");
        regionCityMap.put("–†—ñ–≤–Ω–µ–Ω—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "Rivne");
        regionCityMap.put("–ú–∏–∫–æ–ª–∞—ó–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "Mykolaiv");
        regionCityMap.put("–•–µ—Ä—Å–æ–Ω—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "Kherson");
        regionCityMap.put("–ñ–∏—Ç–æ–º–∏—Ä—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "Zhytomyr");
        regionCityMap.put("–ö—ñ—Ä–æ–≤–æ–≥—Ä–∞–¥—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "Kropyvnytskyi");
        regionCityMap.put("–°—É–º—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "Sumy");
        regionCityMap.put("–ó–∞–∫–∞—Ä–ø–∞—Ç—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "Uzhhorod");
        regionCityMap.put("–ß–µ—Ä–Ω—ñ–≤–µ—Ü—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "Chernivtsi");
        regionCityMap.put("–î–æ–Ω–µ—Ü—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "Donetsk");
        regionCityMap.put("–õ—É–≥–∞–Ω—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å", "Luhansk");
        regionCityMap.put("–ê–† –ö—Ä–∏–º", "Simferopol");
    }

    private String mapRegionToCity(String region) {
        return regionCityMap.getOrDefault(region, "Kyiv");
    }


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_detail);

        nameView = findViewById(R.id.tvDetailName);
        regionView = findViewById(R.id.tvDetailRegion);
        descriptionView = findViewById(R.id.tvDetailDescription);
        weatherView = findViewById(R.id.tvWeather);
        imageView = findViewById(R.id.ivDetail);
        //favoriteButton = findViewById(R.id.ivFavoriteButton);

        String placeId = getIntent().getStringExtra("place_id");
        placeViewModel = new ViewModelProvider(this).get(PlaceViewModel.class);
        favoriteViewModel = new ViewModelProvider(this).get(FavoriteViewModel.class);
        //historyViewModel = new ViewModelProvider(this).get(HistoryViewModel.class);

        if (placeId != null) {
            placeViewModel.getPlaceById(placeId).observe(this, place -> {
                if (place != null) {
                    bindPlace(place);
                    loadWeather(place.region);

                    //favoriteButton.setOnClickListener(...)
                    //historyViewModel.insert(...)

                } else {
                    Toast.makeText(this, "–ú—ñ—Å—Ü–µ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ", Toast.LENGTH_SHORT).show();
                    finish();
                }
            });
        } else {
            Toast.makeText(this, "–ù–µ–º–∞—î ID –º—ñ—Å—Ü—è", Toast.LENGTH_SHORT).show();
            finish();
        }
    }

    private void bindPlace(Place place) {
        nameView.setText(place.name);
        regionView.setText(place.region);
        descriptionView.setText(place.description);
        Glide.with(this).load(place.imageUrl).into(imageView);
    }

    private String formatUnixTime(long timestamp) {
        java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("HH:mm");
        sdf.setTimeZone(java.util.TimeZone.getDefault());
        return sdf.format(new java.util.Date(timestamp * 1000L));
    }

    private void loadWeather(String region) {
        String city = mapRegionToCity(region);
        placeViewModel.loadWeather(city);
        placeViewModel.getWeatherLiveData().observe(this, weather -> {
            if (weather != null) {
                weatherView.setText(
                        " ‚òÅÔ∏è  –ü–æ–≥–æ–¥–∞: " + weather.getDescription() + "\n" +
                                " üå§  –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: " + String.format("%.1f", weather.getTemp()) + "¬∞C\n" +
                                " üå°Ô∏è  –í—ñ–¥—á—É–≤–∞—î—Ç—å—Å—è —è–∫: " + String.format("%.1f", weather.getFeelsLike()) + "¬∞C\n" +
                                " üîΩ  –ú—ñ–Ω: " + String.format("%.1f", weather.getTempMin()) + "¬∞C\n" +
                                " üîº  –ú–∞–∫—Å: " + String.format("%.1f", weather.getTempMax()) + "¬∞C\n" +
                                " üíß  –í–æ–ª–æ–≥—ñ—Å—Ç—å: " + weather.getHumidity() + "%\n" +
                                " üîµ  –¢–∏—Å–∫: " + weather.getPressure() + " –≥–ü–∞\n" +
                                " üå¨Ô∏è  –í—ñ—Ç–µ—Ä: " + weather.getWindSpeed() + " –º/—Å\n" +
                                " üå´  –•–º–∞—Ä–Ω—ñ—Å—Ç—å: " + weather.getClouds() + "%\n" +
                                " üåÖ  –°—Ö—ñ–¥ —Å–æ–Ω—Ü—è: " + formatUnixTime(weather.getSunrise()) + "\n" +
                                " üåá  –ó–∞—Ö—ñ–¥ —Å–æ–Ω—Ü—è: " + formatUnixTime(weather.getSunset())
                );
            } else {
                weatherView.setText("–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –ø—Ä–æ –ø–æ–≥–æ–¥—É –¥–ª—è " + city + ". –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ API –∫–ª—é—á.");
            }
        });
    }

}
